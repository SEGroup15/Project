/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MaintenanceManagement;

import java.awt.*;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.temporal.WeekFields;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author giuse
 */
public class PlannerGUI extends javax.swing.JFrame {

    /**
     * Creates new form PlannerGUI
     */
    private final Connection conn;
    private final Planner Planner;
    private static final String url = "jdbc:postgresql://suleiman.db.elephantsql.com:5432/litqgeus";
    private static final String pwd = "tlZzxfA1WKpHPYzim2E_PENlR6oDlZ52";
    private static final String user = "litqgeus";
    private static DefaultTableModel tab;
    private static DefaultTableModel maintainertab;
    /* PlannerRecordGUI attributes */
    private String typeOfActivity;
    private String isInterruptible;

    
    public PlannerGUI(){
        initComponents();
        conn = PlannerGUI.startConnection();
        Planner= new Planner("admin","admin","Planner",conn);
        tab = (DefaultTableModel) this.scheduledMaintenanceList.getModel();
        setList(true);
        maintainertab = (DefaultTableModel) this.MainteinerAvailabilityTable.getModel();
        SetMaintainerList();
         }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PlannerRecordGUI = new javax.swing.JFrame();
        jLabel9 = new javax.swing.JLabel();
        FactorySiteTextField = new javax.swing.JTextField();
        ExtraActivityButton = new javax.swing.JRadioButton();
        ActivityDescriptionTextField = new javax.swing.JTextField();
        YesButton = new javax.swing.JRadioButton();
        NoButton = new javax.swing.JRadioButton();
        ActivityIDTextField = new javax.swing.JTextField();
        CreateButton = new javax.swing.JRadioButton();
        EstimatedTimeTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        UnplannedActivityButton = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ActivityTypologyComboBox = new javax.swing.JComboBox<>();
        MaterialsTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        PlannedActivityButton = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        WorkspaceNotes = new javax.swing.JTextArea();
        WeekComboBox = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        AreaDepartmentTextField = new javax.swing.JTextField();
        ExecuteButton = new javax.swing.JButton();
        ActivityLabel = new javax.swing.JLabel();
        DeleteButton = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        ModifyButton = new javax.swing.JRadioButton();
        ActionType = new javax.swing.ButtonGroup();
        ActivityType = new javax.swing.ButtonGroup();
        InterruptibileActivity = new javax.swing.ButtonGroup();
        PlannerVerificationGUI = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        LabelWeek = new javax.swing.JLabel();
        LabelNWeek = new javax.swing.JLabel();
        Labelact = new javax.swing.JLabel();
        ActivitytoaLabel = new javax.swing.JLabel();
        WorkspaceLabel = new javax.swing.JLabel();
        InterventionLabel = new javax.swing.JLabel();
        LabelSkill = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        SkillsTextArea = new javax.swing.JTextArea();
        ForwardButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        WorkspaceNotesArea = new javax.swing.JTextArea();
        InterventionTextLabel = new javax.swing.JLabel();
        LabelOpen = new javax.swing.JLabel();
        OpenButton = new javax.swing.JButton();
        MantainerSelectionGUI = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        WeekLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ActivityLabel1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        SkillTextArea2 = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        MainteinerAvailabilityTable = new javax.swing.JTable()
        {
            @Override
            public Component prepareRenderer (TableCellRenderer renderer, int rowIndex, int columnIndex){
                Component component = super.prepareRenderer(renderer, rowIndex, columnIndex);
                Object value = getModel().getValueAt(rowIndex,columnIndex);

                if (value != null){
                    if (columnIndex > 1){
                        if ((Integer)value == 0){
                            component.setBackground(Color.RED);
                        }
                        else if ((Integer)value > 1 && (Integer)value < 33){
                            component.setBackground(Color.ORANGE);
                        }
                        else if ((Integer)value > 32 && (Integer)value < 66){
                            component.setBackground(Color.YELLOW);
                        }
                        else if ((Integer)value > 65 && (Integer)value < 99){
                            component.setBackground(Color.CYAN);
                        }
                        else if ((Integer)value == 100){
                            component.setBackground(Color.GREEN);
                        }

                    }
                    else {
                        component.setBackground(Color.WHITE);
                        component.setForeground(Color.BLACK);
                    }}
                    return component;
                }
            }
            ;
            jLabel26 = new javax.swing.JLabel();
            jLabel34 = new javax.swing.JLabel();
            jScrollPane1 = new javax.swing.JScrollPane();
            scheduledMaintenanceList = new javax.swing.JTable();
            LabelWeekNumber = new javax.swing.JTextField();
            buttonManageMaintenance = new javax.swing.JButton();
            comboBoxWeek = new javax.swing.JComboBox<>();

            PlannerRecordGUI.setMinimumSize(new java.awt.Dimension(958, 500));

            jLabel9.setText("Week:");

            ActivityType.add(ExtraActivityButton);
            ExtraActivityButton.setText("Extra");
            ExtraActivityButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ExtraActivityButtonActionPerformed(evt);
                }
            });

            InterruptibileActivity.add(YesButton);
            YesButton.setText("Yes");
            YesButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    YesButtonActionPerformed(evt);
                }
            });

            InterruptibileActivity.add(NoButton);
            NoButton.setText("No");
            NoButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    NoButtonActionPerformed(evt);
                }
            });

            ActionType.add(CreateButton);
            CreateButton.setText("Create");
            CreateButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    CreateButtonActionPerformed(evt);
                }
            });

            EstimatedTimeTextField.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    EstimatedTimeTextFieldActionPerformed(evt);
                }
            });

            jLabel3.setText("Area or Department:");

            ActivityType.add(UnplannedActivityButton);
            UnplannedActivityButton.setText("Unplanned");
            UnplannedActivityButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    UnplannedActivityButtonActionPerformed(evt);
                }
            });

            jLabel5.setText("Activity description:");

            jLabel6.setText("Estimated intervention time (in minutes):");

            jLabel8.setText("Materials:");

            jLabel4.setText("Typology of maintenance activity:");

            ActivityTypologyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Electrical", "Electronic", "Hydraulic", "Mechanical" }));
            ActivityTypologyComboBox.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ActivityTypologyComboBoxActionPerformed(evt);
                }
            });

            jLabel7.setText("Factory site:");

            jLabel11.setText("Type of activity:");

            ActivityType.add(PlannedActivityButton);
            PlannedActivityButton.setText("Planned");
            PlannedActivityButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    PlannedActivityButtonActionPerformed(evt);
                }
            });

            jLabel10.setText("Workspace notes:");

            WorkspaceNotes.setColumns(20);
            WorkspaceNotes.setRows(5);
            jScrollPane2.setViewportView(WorkspaceNotes);

            WeekComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52" }));
            WeekComboBox.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    WeekComboBoxActionPerformed(evt);
                }
            });

            jLabel12.setText("Interruptible activity:");

            ExecuteButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
            ExecuteButton.setText("Execute");
            ExecuteButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            ExecuteButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ExecuteButtonActionPerformed(evt);
                }
            });

            ActivityLabel.setText("Activity ID:");

            ActionType.add(DeleteButton);
            DeleteButton.setText("Delete");
            DeleteButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    DeleteButtonActionPerformed(evt);
                }
            });

            jLabel13.setText("Type of action:");

            ActionType.add(ModifyButton);
            ModifyButton.setText("Modify");
            ModifyButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ModifyButtonActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout PlannerRecordGUILayout = new javax.swing.GroupLayout(PlannerRecordGUI.getContentPane());
            PlannerRecordGUI.getContentPane().setLayout(PlannerRecordGUILayout);
            PlannerRecordGUILayout.setHorizontalGroup(
                PlannerRecordGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PlannerRecordGUILayout.createSequentialGroup()
                    .addGap(88, 88, 88)
                    .addGroup(PlannerRecordGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(AreaDepartmentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FactorySiteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(ActivityIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ActivityLabel)
                        .addComponent(jLabel4)
                        .addComponent(ActivityTypologyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                    .addGroup(PlannerRecordGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PlannerRecordGUILayout.createSequentialGroup()
                            .addGroup(PlannerRecordGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(MaterialsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap())
                        .addGroup(PlannerRecordGUILayout.createSequentialGroup()
                            .addGroup(PlannerRecordGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ActivityDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(EstimatedTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8)
                                .addGroup(PlannerRecordGUILayout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(YesButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(NoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel6))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                            .addGroup(PlannerRecordGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PlannerRecordGUILayout.createSequentialGroup()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(88, 88, 88))
                                .addGroup(PlannerRecordGUILayout.createSequentialGroup()
                                    .addGroup(PlannerRecordGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel10)
                                        .addComponent(WeekComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9))
                                    .addContainerGap())))))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PlannerRecordGUILayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ExecuteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
                .addGroup(PlannerRecordGUILayout.createSequentialGroup()
                    .addGap(308, 308, 308)
                    .addGroup(PlannerRecordGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PlannerRecordGUILayout.createSequentialGroup()
                            .addGap(9, 9, 9)
                            .addComponent(jLabel13)
                            .addGap(6, 6, 6)
                            .addComponent(CreateButton)
                            .addGap(18, 18, 18)
                            .addComponent(ModifyButton)
                            .addGap(18, 18, 18)
                            .addComponent(DeleteButton))
                        .addGroup(PlannerRecordGUILayout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(PlannedActivityButton)
                            .addGap(18, 18, 18)
                            .addComponent(UnplannedActivityButton)
                            .addGap(18, 18, 18)
                            .addComponent(ExtraActivityButton)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            PlannerRecordGUILayout.setVerticalGroup(
                PlannerRecordGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PlannerRecordGUILayout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addGroup(PlannerRecordGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PlannerRecordGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CreateButton)
                            .addComponent(jLabel13))
                        .addComponent(ModifyButton)
                        .addComponent(DeleteButton))
                    .addGap(18, 18, 18)
                    .addGroup(PlannerRecordGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(PlannedActivityButton)
                        .addComponent(UnplannedActivityButton)
                        .addComponent(ExtraActivityButton)
                        .addComponent(jLabel11))
                    .addGap(50, 50, 50)
                    .addGroup(PlannerRecordGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PlannerRecordGUILayout.createSequentialGroup()
                            .addComponent(ActivityLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ActivityIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(FactorySiteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(AreaDepartmentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ActivityTypologyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(PlannerRecordGUILayout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(6, 6, 6)
                            .addGroup(PlannerRecordGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(PlannerRecordGUILayout.createSequentialGroup()
                                    .addComponent(ActivityDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(20, 20, 20)
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(EstimatedTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(PlannerRecordGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel12)
                                        .addComponent(YesButton)
                                        .addComponent(NoButton))
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel8))
                                .addGroup(PlannerRecordGUILayout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(WeekComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(MaterialsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(8, 8, 8)
                    .addComponent(ExecuteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            PlannerVerificationGUI.setMinimumSize(new java.awt.Dimension(750, 400));

            jPanel1.setBackground(new java.awt.Color(255, 153, 0));

            LabelWeek.setBackground(new java.awt.Color(255, 255, 255));
            LabelWeek.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
            LabelWeek.setText("     Week n°");
            LabelWeek.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            LabelWeek.setOpaque(true);

            LabelNWeek.setBackground(new java.awt.Color(102, 102, 102));
            LabelNWeek.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
            LabelNWeek.setForeground(new java.awt.Color(255, 255, 255));
            LabelNWeek.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            LabelNWeek.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            LabelNWeek.setOpaque(true);

            Labelact.setBackground(new java.awt.Color(255, 255, 255));
            Labelact.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
            Labelact.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            Labelact.setText("<html>  Activity to\n  assign");
            Labelact.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            Labelact.setOpaque(true);

            ActivitytoaLabel.setBackground(new java.awt.Color(102, 102, 102));
            ActivitytoaLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
            ActivitytoaLabel.setForeground(new java.awt.Color(255, 255, 255));
            ActivitytoaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            ActivitytoaLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            ActivitytoaLabel.setOpaque(true);

            WorkspaceLabel.setBackground(new java.awt.Color(255, 204, 102));
            WorkspaceLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
            WorkspaceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            WorkspaceLabel.setText("Workspace Notes");
            WorkspaceLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            WorkspaceLabel.setOpaque(true);

            InterventionLabel.setBackground(new java.awt.Color(255, 204, 102));
            InterventionLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
            InterventionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            InterventionLabel.setText("Intervention Description");
            InterventionLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            InterventionLabel.setOpaque(true);

            LabelSkill.setBackground(new java.awt.Color(255, 204, 102));
            LabelSkill.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
            LabelSkill.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            LabelSkill.setText("Skills needed");
            LabelSkill.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            LabelSkill.setOpaque(true);

            SkillsTextArea.setEditable(false);
            SkillsTextArea.setColumns(20);
            SkillsTextArea.setRows(5);
            SkillsTextArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jScrollPane3.setViewportView(SkillsTextArea);

            ForwardButton.setBackground(new java.awt.Color(102, 102, 102));
            ForwardButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
            ForwardButton.setForeground(new java.awt.Color(255, 255, 255));
            ForwardButton.setText("FORWARD");
            ForwardButton.setBorderPainted(false);
            ForwardButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ForwardButtonActionPerformed(evt);
                }
            });

            WorkspaceNotesArea.setColumns(20);
            WorkspaceNotesArea.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
            WorkspaceNotesArea.setRows(5);
            jScrollPane5.setViewportView(WorkspaceNotesArea);

            InterventionTextLabel.setBackground(new java.awt.Color(255, 255, 255));
            InterventionTextLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
            InterventionTextLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            InterventionTextLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
            InterventionTextLabel.setAlignmentX(0.1F);
            InterventionTextLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            InterventionTextLabel.setOpaque(true);

            LabelOpen.setBackground(new java.awt.Color(255, 255, 255));
            LabelOpen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
            LabelOpen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            LabelOpen.setText("<html>Standard\nMaintenance\nProcedure File\n(SMP)");
            LabelOpen.setOpaque(true);

            OpenButton.setBackground(new java.awt.Color(255, 102, 0));
            OpenButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
            OpenButton.setText("PDF");
            OpenButton.setBorderPainted(false);
            OpenButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    OpenButtonActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap(17, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(LabelWeek, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LabelNWeek, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(WorkspaceLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(OpenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(LabelOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(InterventionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(InterventionTextLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane3)
                                    .addComponent(LabelSkill, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(ForwardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(28, 28, 28))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(Labelact, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(34, 34, 34)
                            .addComponent(ActivitytoaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(18, Short.MAX_VALUE))
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ActivitytoaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LabelWeek, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                            .addComponent(LabelNWeek, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Labelact, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(WorkspaceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                        .addComponent(InterventionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LabelSkill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(ForwardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(InterventionTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(OpenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LabelOpen, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))))
                    .addContainerGap(33, Short.MAX_VALUE))
            );

            javax.swing.GroupLayout PlannerVerificationGUILayout = new javax.swing.GroupLayout(PlannerVerificationGUI.getContentPane());
            PlannerVerificationGUI.getContentPane().setLayout(PlannerVerificationGUILayout);
            PlannerVerificationGUILayout.setHorizontalGroup(
                PlannerVerificationGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            PlannerVerificationGUILayout.setVerticalGroup(
                PlannerVerificationGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );

            MantainerSelectionGUI.setBackground(new java.awt.Color(255, 153, 51));
            MantainerSelectionGUI.setMinimumSize(new java.awt.Dimension(1020, 380));

            jPanel2.setBackground(new java.awt.Color(255, 153, 0));

            jLabel1.setBackground(new java.awt.Color(255, 255, 255));
            jLabel1.setFont(new java.awt.Font("Tahoma", 1, 19)); // NOI18N
            jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel1.setText("Week n°");
            jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jLabel1.setOpaque(true);

            WeekLabel.setBackground(new java.awt.Color(102, 102, 102));
            WeekLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
            WeekLabel.setForeground(new java.awt.Color(255, 255, 255));
            WeekLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            WeekLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            WeekLabel.setOpaque(true);

            jLabel2.setBackground(new java.awt.Color(255, 255, 255));
            jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
            jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel2.setText("<html>Activity to assign");
            jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jLabel2.setOpaque(true);

            ActivityLabel1.setBackground(new java.awt.Color(102, 102, 102));
            ActivityLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
            ActivityLabel1.setForeground(new java.awt.Color(255, 255, 255));
            ActivityLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            ActivityLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            ActivityLabel1.setOpaque(true);

            jLabel14.setBackground(new java.awt.Color(255, 204, 102));
            jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel14.setText("Skills needed");
            jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jLabel14.setOpaque(true);

            jLabel15.setBackground(new java.awt.Color(255, 204, 102));
            jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel15.setText("Mainteiner Availability");
            jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jLabel15.setOpaque(true);

            SkillTextArea2.setEditable(false);
            SkillTextArea2.setColumns(20);
            SkillTextArea2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
            SkillTextArea2.setRows(5);
            jScrollPane4.setViewportView(SkillTextArea2);

            MainteinerAvailabilityTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
            MainteinerAvailabilityTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null}
                },
                new String [] {
                    "Manteiner", "Skills", "Availab. Mon", "Availab. Tue", "Availab. Wed", "Availab. Thu", "Availab. Fri", "Availab. Sat", "Availab. Sun"
                }
            ) {
                boolean[] canEdit = new boolean [] {
                    false, false, false, false, false, false, false, false, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            MainteinerAvailabilityTable.setGridColor(new java.awt.Color(0, 0, 0));
            MainteinerAvailabilityTable.setIntercellSpacing(new java.awt.Dimension(2, 2));
            MainteinerAvailabilityTable.setRowHeight(40);
            MainteinerAvailabilityTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
            jScrollPane6.setViewportView(MainteinerAvailabilityTable);

            javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
            jPanel2.setLayout(jPanel2Layout);
            jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(30, 30, 30)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(WeekLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ActivityLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addContainerGap(26, Short.MAX_VALUE))
            );
            jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(WeekLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ActivityLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                    .addContainerGap(23, Short.MAX_VALUE))
            );

            javax.swing.GroupLayout MantainerSelectionGUILayout = new javax.swing.GroupLayout(MantainerSelectionGUI.getContentPane());
            MantainerSelectionGUI.getContentPane().setLayout(MantainerSelectionGUILayout);
            MantainerSelectionGUILayout.setHorizontalGroup(
                MantainerSelectionGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            MantainerSelectionGUILayout.setVerticalGroup(
                MantainerSelectionGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            );

            jLabel26.setBackground(new java.awt.Color(255, 153, 0));
            jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
            jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel26.setText("Mantainer");
            jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102), 3));
            jLabel26.setOpaque(true);

            jLabel34.setBackground(new java.awt.Color(255, 153, 0));
            jLabel34.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
            jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel34.setText("Mantainer");
            jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102)));
            jLabel34.setOpaque(true);

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            setTitle("PlannerGUI");
            setMinimumSize(new java.awt.Dimension(800, 500));

            scheduledMaintenanceList.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String [] {
                    "ID", "AREA", "TYPE", "Estimated intervention time [min]"
                }
            ) {
                boolean[] canEdit = new boolean [] {
                    false, false, false, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            scheduledMaintenanceList.setMaximumSize(new java.awt.Dimension(800, 400));
            scheduledMaintenanceList.setMinimumSize(new java.awt.Dimension(800, 400));
            scheduledMaintenanceList.setPreferredSize(new java.awt.Dimension(800, 400));
            scheduledMaintenanceList.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    scheduledMaintenanceListMouseClicked(evt);
                }
            });
            jScrollPane1.setViewportView(scheduledMaintenanceList);
            if (scheduledMaintenanceList.getColumnModel().getColumnCount() > 0) {
                scheduledMaintenanceList.getColumnModel().getColumn(0).setHeaderValue("ID");
                scheduledMaintenanceList.getColumnModel().getColumn(1).setHeaderValue("AREA");
                scheduledMaintenanceList.getColumnModel().getColumn(2).setHeaderValue("TYPE");
                scheduledMaintenanceList.getColumnModel().getColumn(3).setHeaderValue("Estimated intervention time [min]");
            }

            LabelWeekNumber.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
            LabelWeekNumber.setText("               WEEK N°");
            LabelWeekNumber.setFocusable(false);
            LabelWeekNumber.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    LabelWeekNumberActionPerformed(evt);
                }
            });

            buttonManageMaintenance.setText("Manage Maintenance ");
            buttonManageMaintenance.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    buttonManageMaintenanceActionPerformed(evt);
                }
            });

            comboBoxWeek.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52" }));
            comboBoxWeek.setSelectedItem(2);
            comboBoxWeek.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    comboBoxWeekActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(LabelWeekNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(comboBoxWeek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonManageMaintenance, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LabelWeekNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboBoxWeek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(buttonManageMaintenance)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void LabelWeekNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LabelWeekNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LabelWeekNumberActionPerformed

    private void buttonManageMaintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonManageMaintenanceActionPerformed
        PlannerRecordGUI.setVisible(true);
    }//GEN-LAST:event_buttonManageMaintenanceActionPerformed

    private void scheduledMaintenanceListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scheduledMaintenanceListMouseClicked
       try{
            String activityid = (String) tab.getValueAt(scheduledMaintenanceList.getSelectedRow(), 0);
            queryVerification(activityid);
            querySkill(activityid);
            PlannerVerificationGUI.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(PlannerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }catch(java.lang.ArrayIndexOutOfBoundsException e){
             JOptionPane.showMessageDialog(null, "No activity selected!", "Error!", 0);
        }       
    }//GEN-LAST:event_scheduledMaintenanceListMouseClicked

    private void comboBoxWeekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxWeekActionPerformed
        setList(false);
    }//GEN-LAST:event_comboBoxWeekActionPerformed

    private void ExtraActivityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExtraActivityButtonActionPerformed
        typeOfActivity = "Extra";
    }//GEN-LAST:event_ExtraActivityButtonActionPerformed

    private void YesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YesButtonActionPerformed
        isInterruptible = "Yes";
    }//GEN-LAST:event_YesButtonActionPerformed

    private void NoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoButtonActionPerformed
        isInterruptible = "No";
    }//GEN-LAST:event_NoButtonActionPerformed

    private void CreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateButtonActionPerformed
        PlannedActivityButton.setEnabled(true);
        UnplannedActivityButton.setEnabled(true);
        ExtraActivityButton.setEnabled(true);
        FactorySiteTextField.setEnabled(true);
        AreaDepartmentTextField.setEnabled(true);
        ActivityTypologyComboBox.setEnabled(true);
        ActivityDescriptionTextField.setEnabled(true);
        EstimatedTimeTextField.setEnabled(true);
        YesButton.setEnabled(true);
        NoButton.setEnabled(true);
        MaterialsTextField.setEnabled(true);
        WeekComboBox.setEnabled(true);
        WorkspaceNotes.setEnabled(true);

    }//GEN-LAST:event_CreateButtonActionPerformed

    private void EstimatedTimeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EstimatedTimeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EstimatedTimeTextFieldActionPerformed

    private void UnplannedActivityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnplannedActivityButtonActionPerformed
        typeOfActivity = "Unplanned";
    }//GEN-LAST:event_UnplannedActivityButtonActionPerformed

    private void ActivityTypologyComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActivityTypologyComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ActivityTypologyComboBoxActionPerformed

    private void PlannedActivityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlannedActivityButtonActionPerformed
        typeOfActivity = "Planned";
    }//GEN-LAST:event_PlannedActivityButtonActionPerformed

    private void WeekComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WeekComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_WeekComboBoxActionPerformed

    private void ExecuteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExecuteButtonActionPerformed
        boolean interruptible;
        if (isInterruptible == "Yes"){
            interruptible= true;
        }
        else{
            interruptible= false;
        }

        if (!(CreateButton.isSelected()) && !(ModifyButton.isSelected()) && !(DeleteButton.isSelected())){
            JOptionPane.showMessageDialog(null, "A type of action must be selected!", "Error!", 0);
        }

        if (CreateButton.isSelected()){
            if (ActivityIDTextField.getText().isEmpty() || FactorySiteTextField.getText().isEmpty() || AreaDepartmentTextField.getText().isEmpty() || ActivityDescriptionTextField.getText().isEmpty() || EstimatedTimeTextField.getText().isEmpty() || (!(PlannedActivityButton.isSelected()) && !(UnplannedActivityButton.isSelected()) && !(ExtraActivityButton.isSelected())) || (!(YesButton.isSelected()) && !(NoButton.isSelected()))){
                JOptionPane.showMessageDialog(null, "Some fields have not been filled in!", "Error!", 0);
            }
            else if (!isNumeric(EstimatedTimeTextField.getText())){
                JOptionPane.showMessageDialog(null, "Estimated time must be a number!", "Error!", 0);
            }
            else if (!isNumeric(ActivityIDTextField.getText()) || Integer.parseInt(ActivityIDTextField.getText()) < 1){
                JOptionPane.showMessageDialog(null, "Activity ID must be a number!", "Error!", 0);
            }
            else{
                int activityID = Integer.parseInt(ActivityIDTextField.getText());
                String factorySite = FactorySiteTextField.getText();
                String areaOrDepartment = AreaDepartmentTextField.getText();
                String activityTypology = (ActivityTypologyComboBox.getItemAt(ActivityTypologyComboBox.getSelectedIndex())).toLowerCase();
                String activityDescription = ActivityDescriptionTextField.getText();
                int interventionTime = Integer.parseInt(EstimatedTimeTextField.getText());
                String materials = MaterialsTextField.getText();
                int weeks = WeekComboBox.getSelectedIndex() + 1;
                String workspaceNotes = WorkspaceNotes.getText();

                try{
                    Procedure p = new Procedure("pr1");
                    Activity a = Planner.createActivity(activityID, factorySite, areaOrDepartment, activityTypology, activityDescription, interventionTime, interruptible, materials, weeks, workspaceNotes,p);
                    Planner.addActivity(a);
                    setList(false);
                    JOptionPane.showMessageDialog(null,"Type of activity:  " + typeOfActivity + "\n" + "Activity ID:  " +  activityID + "\n" + "Factory site:  " + factorySite + "\n" + "Area/Department:  " + areaOrDepartment + "\n" + "Typology of activity:  " + activityTypology + "\n" + "Activity description:  " + activityDescription + "\n" + "Estimated intervention time:  " + interventionTime + "\n" + "Is it an interruptible activity?  " + isInterruptible + "\n" + "Materials to be used:  " +  materials + "\n" + "Weeks to carry out the activity:  " + weeks + "\n" + "Workspace notes:  " + workspaceNotes, "Activity Information:",1);
                    ActivityIDTextField.setText(null);
                    FactorySiteTextField.setText(null);
                    AreaDepartmentTextField.setText(null);
                    ActivityDescriptionTextField.setText(null);
                    EstimatedTimeTextField.setText(null);
                    MaterialsTextField.setText(null);
                    WorkspaceNotes.setText(null);    
                }
                catch (SQLException e){
                    System.out.println(e.getMessage());
                    JOptionPane.showMessageDialog(null, "An activity with the same ID already exists!", "Error",0);
                    ActivityIDTextField.setText(null);
                }

                
            }
        }

        if (ModifyButton.isSelected()){
            if (ActivityIDTextField.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "No activity ID was specified", "Error!", 0);
            }
            else{
                try{
                    int activityID = Integer.parseInt(ActivityIDTextField.getText());
                    String workspaceNotes = WorkspaceNotes.getText();
                    Planner.modifyActivity(activityID, workspaceNotes);
                    JOptionPane.showMessageDialog(null, "The workspace notes have been modified","Modify",1);
                    ActivityIDTextField.setText(null);
                    WorkspaceNotes.setText(null);
                    setList(false);
                }
                catch (java.sql.SQLException e){
                    System.out.println(e.getMessage());
                }
            }
        }

        if (DeleteButton.isSelected()){
            if (ActivityIDTextField.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "No activity ID was specified", "Error!", 0);
            }
            else{
                try{
                    int activityID = Integer.parseInt(ActivityIDTextField.getText());
                    Planner.deleteActivity(activityID);
                    JOptionPane.showMessageDialog(null, "The activity has been deleted","Delete",1);
                    ActivityIDTextField.setText(null);
                    setList(false);
                }
                catch (java.sql.SQLException e){
                    System.out.println(e.getMessage());
                }
            }
        }

    }//GEN-LAST:event_ExecuteButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        PlannedActivityButton.setEnabled(false);
        UnplannedActivityButton.setEnabled(false);
        ExtraActivityButton.setEnabled(false);
        FactorySiteTextField.setEnabled(false);
        AreaDepartmentTextField.setEnabled(false);
        ActivityTypologyComboBox.setEnabled(false);
        ActivityDescriptionTextField.setEnabled(false);
        EstimatedTimeTextField.setEnabled(false);
        YesButton.setEnabled(false);
        NoButton.setEnabled(false);
        MaterialsTextField.setEnabled(false);
        WeekComboBox.setEnabled(false);
        WorkspaceNotes.setEnabled(false);
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void ModifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyButtonActionPerformed
        PlannedActivityButton.setEnabled(false);
        UnplannedActivityButton.setEnabled(false);
        ExtraActivityButton.setEnabled(false);
        FactorySiteTextField.setEnabled(false);
        AreaDepartmentTextField.setEnabled(false);
        ActivityTypologyComboBox.setEnabled(false);
        ActivityDescriptionTextField.setEnabled(false);
        EstimatedTimeTextField.setEnabled(false);
        YesButton.setEnabled(false);
        NoButton.setEnabled(false);
        MaterialsTextField.setEnabled(false);
        WeekComboBox.setEnabled(false);
        WorkspaceNotes.setEnabled(true);
    }//GEN-LAST:event_ModifyButtonActionPerformed

    private void OpenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenButtonActionPerformed
        try {
            java.awt.Desktop.getDesktop().browse(new URI("https://www.usbr.gov/power/data/fist/fist4_1a/4-1A.pdf"));
        } catch (URISyntaxException ex) {
            Logger.getLogger(PlannerGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PlannerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_OpenButtonActionPerformed

    private void ForwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ForwardButtonActionPerformed
        try {
            String stringa = ActivitytoaLabel.getText();
            String[] arrSplit = stringa.split("-");
            String activityID = arrSplit[0];
            Planner.modifyActivity(Integer.parseInt(activityID),WorkspaceNotesArea.getText());
            MantainerSelectionGUI.setVisible(true);
            WeekLabel.setText(LabelNWeek.getText());
            ActivityLabel1.setText(ActivitytoaLabel.getText());
            SkillTextArea2.setText(SkillsTextArea.getText());
        } catch (SQLException ex) {
            Logger.getLogger(PlannerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ForwardButtonActionPerformed
    
    
    private void setList(boolean initialize){
        if (initialize==true) {
        LocalDate date = LocalDate.now();
        WeekFields weekFields = WeekFields.of(Locale.getDefault());
        this.comboBoxWeek.getModel().setSelectedItem(date.get(weekFields.weekOfWeekBasedYear()));
        };
        String[] nomi = {"ID","AREA","TYPE","Estimated intervention time[min]"};
        ResultSet rst = null;
        try {
            rst = Planner.getActivities(this.comboBoxWeek.getSelectedItem().toString());
        } catch (SQLException ex) {
            Logger.getLogger(PlannerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        tab.setRowCount(0);
        tab.setColumnIdentifiers(nomi);
        Object[] row = new Object[4];
        try{
            while(rst.next()){
                row[0]=rst.getString("activityid");
                row[1]=rst.getString("factorysite") + " - " + rst.getString("area");
                row[2]=rst.getString("typology");
                row[3]=rst.getString("estimatedtime");
                tab.addRow(row);
            }
        }catch(SQLException ex){
            
        }
             
    }
    
    
   private void SetMaintainerList(){
   }
    
    private static boolean isNumeric(String str) { 
  try {  
    Double.parseDouble(str);  
    return true;
  } catch(NumberFormatException e){  
    return false;  
  }  
}  
    private static Connection startConnection(){
        Connection conn = null;
        try {
            conn=DriverManager.getConnection(url, user, pwd);
        }
        catch(SQLException ex){
            
        }
        return conn;
    }
     private void queryVerification(String activityid) throws SQLException {
        Statement op = conn.createStatement();
        ResultSet rst = op.executeQuery("select * from activity where activityId= " + activityid);
        while (rst.next()) {
            String activityto = "";
            String area = "";
            String typology = "";
            String esttime = "";
            String workspacenotes = "";
            String nweek = "";
            String description = "";
            area = rst.getString("area");
            typology = rst.getString("typology");
            description = rst.getString("description");
            esttime = rst.getString("estimatedtime");
            nweek = rst.getString("week");
            workspacenotes = rst.getString("workspaceNotes");
            WorkspaceNotesArea.setText(workspacenotes);
            activityto = activityid + "-" + area + "-" + typology + "-" + esttime;
            LabelNWeek.setText(nweek);
            ActivitytoaLabel.setText(activityto);
            InterventionTextLabel.setText(description);
        }

    }

    private void querySkill(String activityid) throws SQLException {
        Statement o = conn.createStatement();
        ResultSet rst = o.executeQuery("select competence from proceduraComp where procedura=(select procedura from activity where activityId=" + activityid + ")");
        String skill = "";
        while (rst.next()) {
            skill = skill + "·" + rst.getString("competence") + "\n";
            SkillsTextArea.setText(skill);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]){
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlannerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlannerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlannerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlannerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
               
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlannerGUI().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup ActionType;
    private javax.swing.JTextField ActivityDescriptionTextField;
    private javax.swing.JTextField ActivityIDTextField;
    private javax.swing.JLabel ActivityLabel;
    private javax.swing.JLabel ActivityLabel1;
    private javax.swing.ButtonGroup ActivityType;
    private javax.swing.JComboBox<String> ActivityTypologyComboBox;
    private javax.swing.JLabel ActivitytoaLabel;
    private javax.swing.JTextField AreaDepartmentTextField;
    private javax.swing.JRadioButton CreateButton;
    private javax.swing.JRadioButton DeleteButton;
    private javax.swing.JTextField EstimatedTimeTextField;
    private javax.swing.JButton ExecuteButton;
    private javax.swing.JRadioButton ExtraActivityButton;
    private javax.swing.JTextField FactorySiteTextField;
    private javax.swing.JButton ForwardButton;
    private javax.swing.ButtonGroup InterruptibileActivity;
    private javax.swing.JLabel InterventionLabel;
    private javax.swing.JLabel InterventionTextLabel;
    private javax.swing.JLabel LabelNWeek;
    private javax.swing.JLabel LabelOpen;
    private javax.swing.JLabel LabelSkill;
    private javax.swing.JLabel LabelWeek;
    private javax.swing.JTextField LabelWeekNumber;
    private javax.swing.JLabel Labelact;
    private javax.swing.JTable MainteinerAvailabilityTable;
    private javax.swing.JFrame MantainerSelectionGUI;
    private javax.swing.JTextField MaterialsTextField;
    private javax.swing.JRadioButton ModifyButton;
    private javax.swing.JRadioButton NoButton;
    private javax.swing.JButton OpenButton;
    private javax.swing.JRadioButton PlannedActivityButton;
    private javax.swing.JFrame PlannerRecordGUI;
    private javax.swing.JFrame PlannerVerificationGUI;
    private javax.swing.JTextArea SkillTextArea2;
    private javax.swing.JTextArea SkillsTextArea;
    private javax.swing.JRadioButton UnplannedActivityButton;
    private javax.swing.JComboBox<String> WeekComboBox;
    private javax.swing.JLabel WeekLabel;
    private javax.swing.JLabel WorkspaceLabel;
    private javax.swing.JTextArea WorkspaceNotes;
    private javax.swing.JTextArea WorkspaceNotesArea;
    private javax.swing.JRadioButton YesButton;
    private javax.swing.JButton buttonManageMaintenance;
    private javax.swing.JComboBox<String> comboBoxWeek;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable scheduledMaintenanceList;
    // End of variables declaration//GEN-END:variables
}
